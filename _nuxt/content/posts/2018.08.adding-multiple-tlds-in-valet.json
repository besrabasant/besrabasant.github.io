{"title":"Adding Multiple tld's in valet","coverimage":"laravel-valet.png","meta":{"index":0,"fileName":"2018-08-05-adding-multiple-tlds-in-valet.md","section":"/","dirName":"/posts"},"date":"2018-08-05","path":"/2018/08/adding-multiple-tlds-in-valet","permalink":"/2018/08/adding-multiple-tlds-in-valet","anchors":[["#adding-multiple-tld-s-in-valet","Adding Multiple tld's in valet"]],"body":"<h1 id=\"adding-multiple-tlds-in-valet\">Adding Multiple tld’s in valet</h1>\n<p>So, all of us use some kind of local development setup. It may be <strong><a href=\"https://www.liquidweb.com/kb/what-is-a-lamp-stack/\" target=\"_blank\" rel=\"noopener\">LAMP</a></strong>, <strong><a href=\"https://bitnami.com/stack/wamp\" target=\"_blank\" rel=\"noopener\">WAMP</a></strong>(windows), <strong><a href=\"https://en.wikipedia.org/wiki/XAMPP\" target=\"_blank\" rel=\"noopener\">XAMPP</a></strong>, <strong><a href=\"https://en.wikipedia.org/wiki/Vagrant_(software)\" target=\"_blank\" rel=\"noopener\">Vagrant</a></strong>, etc. I used to use <strong>XAMPP</strong> a lot, then I switched to <strong>Vagrant</strong> and now finally <strong><a href=\"https://github.com/laravel/valet\" target=\"_blank\" rel=\"noopener\">Valet</a></strong>.\nAfter using <strong>Valet</strong>, I can say, it offers a great development experience. Local dev enviroment setup is a breeze with <strong>Valet</strong>. Just go to your project root and run <code>valet link</code> and you are good to go (You can find more in the docs <a href=\"https://laravel.com/docs/master/valet\" target=\"_blank\" rel=\"noopener\">here</a>). Unluckily, the default project only supports <a href=\"https://en.wikipedia.org/wiki/MacOS\" target=\"_blank\" rel=\"noopener\">macOS</a>, but there are fork’s of the project for other OSes also.\n<br/><br/></p>\n<ul>\n<li><strong><a href=\"https://github.com/cpriego/valet-linux\" target=\"_blank\" rel=\"noopener\">valet-linux</a></strong> for Linux</li>\n<li><strong><a href=\"https://github.com/cretueusebiu/valet-windows\" target=\"_blank\" rel=\"noopener\">valet-windows</a></strong> for Windows\n<br/><br/></li>\n</ul>\n<h2 id=\"adding-more-than-one-tld\">Adding more than one tld</h2>\n<p>So, by default, <strong>Valet</strong> serves your projects using the <code>.test</code>  <a href=\"https://en.wikipedia.org/wiki/Top-level_domain\" target=\"_blank\" rel=\"noopener\">TLD</a>, <em>i.e.</em> if you have a project named <em>example</em>, it will be served under <code>example.test</code>. You can obviously change the <strong>tld</strong> to anything you want using the command <code>valet domain &lt;tld-name&gt;</code>. But there’s a catch. Valet let’s you serve all your projects under one <strong>tld</strong> only. But what if you want your projects to be served under multiple <strong>tld’s</strong>. Let’s say, you want to have both <code>.test</code> and <code>.dev</code>. And later, you also want to add <code>.app</code>. So, here’s a solution (more of like a hack) to add multiple <strong>tld’s</strong> to valet.</p>\n<p><strong>Valet</strong> manages all its magic using a <em>hosts</em> configuration saved in the file <code>/etc/dnsmasq.d/valet</code>. If you open that file, you will find an entry like</p>\n<pre class=\"language-sh\"><code class=\"language-sh\">address=/.test/127.0.0.1\n</code></pre>\n<p>This tells <strong>Valet</strong> to resolve all <code>.test</code> domain names to <code>localhost</code>. Now, to add a second <strong>tld</strong>, you can either do</p>\n<pre class=\"language-sh\"><code class=\"language-sh\">address=/.test/.dev/127.0.0.1\n</code></pre>\n<p>or</p>\n<pre class=\"language-sh\"><code class=\"language-sh\">address=/.test/127.0.0.1\naddress=/.dev/127.0.0.1\n</code></pre>\n<p>This tells <strong>Valet</strong> to resolve both, <code>.test</code> and <code>.dev</code> domain names to <code>localhost</code>.</p>\n<p>Next step, you have to restart <strong>dnsmasq</strong> (not <strong>Valet</strong>) by running the command <code>sudo service dnsmasq restart</code>. This reconfigures <strong>dnsmasq</strong> to accept your newly added <strong>tld</strong>.</p>\n<p>Now for last step, link your site with the new <strong>tld</strong> by running <code>valet link example.dev</code>. Do not forget to add the <strong>tld</strong> after the name. That’s it.</p>\n<p>Now you can find your site served under both <code>example.test</code> and <code>example.dev</code>.</p>\n<p><strong>Note:-</strong> For any site to be served under your new <strong>tld</strong>, add the <strong>tld</strong> to the domain name while running <code>valet link</code>.</p>\n<p>Happy Coding!</p>\n"}